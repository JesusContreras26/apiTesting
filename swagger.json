{
  "swagger": "2.0",
  "info": {
    "title": "My API",
    "description": "Books API",
    "version": "1.0.0"
  },
  "host": "localhost:3000",
  "basePath": "/",
  "schemes": ["http"],
  "paths": {
    "/authors/": {
      "get": {
        "description": "EndPoint to get el the authors of the API",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "description": "Endpoint to create an author in the API, all fields are required",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "firstName": {
                  "example": "any"
                },
                "lastName": {
                  "example": "any"
                },
                "birthday": {
                  "example": "any"
                },
                "favoriteGenders": {
                  "example": "any"
                },
                "authorId": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/authors/{id}": {
      "get": {
        "description": "Endpoint to get one author for the API, an ID is required, ID for testing purposes -> 670f14a7ab685e8ea9e9f46c",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "description": "Update an existing author in the API, and ID is required, ID for testing purposes -> 6712873d03bd0c6edcb4fc90",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "firstName": {
                  "example": "any"
                },
                "lastName": {
                  "example": "any"
                },
                "birthday": {
                  "example": "any"
                },
                "favoriteGenders": {
                  "example": "any"
                },
                "authorId": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "description": "Delete an Author in the API, an ID is required, ID for testing purposes -> 67105df0fc97767791b195d5",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/authors/{id}/books": {
      "get": {
        "description": "Endpoint to get an Author with his books, an ID is required, ID for testing purposes -> 670f14a7ab685e8ea9e9f46c",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/books/": {
      "get": {
        "description": "EndPoint to get all the books of the API",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "description": "EndPoint to create a book, all fields are required",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "example": "any"
                },
                "genders": {
                  "example": "any"
                },
                "publishedDate": {
                  "example": "any"
                },
                "summary": {
                  "example": "any"
                },
                "pages": {
                  "example": "any"
                },
                "reviews": {
                  "example": "any"
                },
                "authorId": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/books/{id}": {
      "get": {
        "description": "EndPoint to get an specific book of the API, an ID is required, ID for testing purposes ->670d26d17becadc28f0e1ae0",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "description": "EndPoint to update a book in the API, and ID is required, ID for testing purposes -> 671282cb9055b0df3ceb0815",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "example": "any"
                },
                "genders": {
                  "example": "any"
                },
                "publishedDate": {
                  "example": "any"
                },
                "summary": {
                  "example": "any"
                },
                "pages": {
                  "example": "any"
                },
                "reviews": {
                  "example": "any"
                },
                "authorId": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "description": "EndPoint to delete a book in API",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  }
}
